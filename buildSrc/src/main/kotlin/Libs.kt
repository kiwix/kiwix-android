/**
 * Generated by https://github.com/jmfayard/buildSrcVersions
 *
 * Update this file with
 *   `$ ./gradlew buildSrcVersions`
 */
object Libs {

  /**
   * For Getting Path of Selected Folder
   **/

  const val select_folder_document_file =
    "androidx.documentfile:documentfile:" + Versions.document_file_version

  /**
   * https://github.com/Kotlin/kotlinx.coroutines
   */
  const val kotlinx_coroutines_android: String =
    "org.jetbrains.kotlinx:kotlinx-coroutines-android:" +
      Versions.org_jetbrains_kotlinx_kotlinx_coroutines

  const val kotlinx_coroutines_rx3: String =
    "org.jetbrains.kotlinx:kotlinx-coroutines-rx3:" + Versions.kotlinx_coroutines_rx3

  /**
   * https://github.com/Kotlin/kotlinx.coroutines
   */
  const val kotlinx_coroutines_test: String = "org.jetbrains.kotlinx:kotlinx-coroutines-test:" +
    Versions.org_jetbrains_kotlinx_kotlinx_coroutines

  /**
   * https://developer.android.com/testing
   */
  const val espresso_contrib: String = "androidx.test.espresso:espresso-contrib:" +
    Versions.androidx_test_espresso

  /**
   * https://developer.android.com/testing
   */
  const val espresso_core: String = "androidx.test.espresso:espresso-core:" +
    Versions.androidx_test_espresso

  /**
   * https://developer.android.com/testing
   */
  const val espresso_intents: String = "androidx.test.espresso:espresso-intents:" +
    Versions.androidx_test_espresso

  /**
   * https://developer.android.com/testing
   */
  const val espresso_web: String = "androidx.test.espresso:espresso-web:" +
    Versions.androidx_test_espresso

  /**
   * https://developer.android.com/testing
   */
  const val espresso_accessibility: String = "androidx.test.espresso:espresso-accessibility:" +
    Versions.androidx_test_espresso

  const val tracing: String = "androidx.tracing:tracing:" + Versions.tracing

  /**
   * https://github.com/square/retrofit
   */
  const val adapter_rxjava2: String = "com.squareup.retrofit2:adapter-rxjava2:" +
    Versions.com_squareup_retrofit2

  /**
   * https://github.com/square/retrofit
   */
  const val converter_simplexml: String = "com.squareup.retrofit2:converter-simplexml:" +
    Versions.com_squareup_retrofit2

  /**
   * https://github.com/square/retrofit
   */
  const val retrofit: String = "com.squareup.retrofit2:retrofit:" + Versions.com_squareup_retrofit2

  /**
   * https://square.github.io/okhttp/
   */
  const val logging_interceptor: String = "com.squareup.okhttp3:logging-interceptor:" +
    Versions.com_squareup_okhttp3

  /**
   * https://square.github.io/okhttp/
   */
  const val mockwebserver: String = "com.squareup.okhttp3:mockwebserver:" +
    Versions.com_squareup_okhttp3

  /**
   * https://kotlinlang.org/
   */
  const val kotlin_gradle_plugin: String = "org.jetbrains.kotlin:kotlin-gradle-plugin:" +
    Versions.org_jetbrains_kotlin

  /**
   * https://kotlinlang.org/
   */
  const val kotlin_stdlib_jdk8: String = "org.jetbrains.kotlin:kotlin-stdlib-jdk8:" +
    Versions.org_jetbrains_kotlin

  const val kotlin_ksp: String =
    "com.google.devtools.ksp:com.google.devtools.ksp.gradle.plugin:" + Versions.kotlin_ksp

  /**
   * https://developer.android.com/topic/libraries/architecture/index.html
   */
  const val navigation_fragment_ktx: String = "androidx.navigation:navigation-fragment-ktx:" +
    Versions.androidx_navigation

  /**
   * https://developer.android.com/topic/libraries/architecture/index.html
   */
  const val navigation_safe_args_gradle_plugin: String =
    "androidx.navigation:navigation-safe-args-gradle-plugin:" + Versions.androidx_navigation

  /**
   * https://developer.android.com/topic/libraries/architecture/index.html
   */
  const val navigation_testing: String = "androidx.navigation:navigation-testing:" +
    Versions.androidx_navigation

  /**
   * https://developer.android.com/topic/libraries/architecture/index.html
   */
  const val navigation_ui_ktx: String = "androidx.navigation:navigation-ui-ktx:" +
    Versions.navigation_ui_ktx

  /**
   * https://github.com/google/dagger
   */
  const val dagger: String = "com.google.dagger:dagger:" + Versions.com_google_dagger

  /**
   * https://github.com/google/dagger
   */
  const val dagger_android: String = "com.google.dagger:dagger-android:" +
    Versions.com_google_dagger

  /**
   * https://github.com/google/dagger
   */
  const val dagger_android_processor: String = "com.google.dagger:dagger-android-processor:" +
    Versions.com_google_dagger

  /**
   * https://github.com/google/dagger
   */
  const val dagger_compiler: String = "com.google.dagger:dagger-compiler:" +
    Versions.com_google_dagger

  /**
   * https://developer.android.com/testing
   */
  const val androidx_test_core: String = "androidx.test:core:" + Versions.androidx_test_core

  /**
   * https://developer.android.com/testing
   */
  const val orchestrator: String =
    "androidx.test:orchestrator:" + Versions.androidx_test_orchestrator

  /**
   * https://developer.android.com/testing
   */
  const val androidx_test_rules: String = "androidx.test:rules:" + Versions.androidx_test_core

  /**
   * https://developer.android.com/testing
   */
  const val androidx_test_runner: String = "androidx.test:runner:" + Versions.androidx_test

  /**
   * https://objectbox.io
   */
  const val objectbox_gradle_plugin: String = "io.objectbox:objectbox-gradle-plugin:" +
    Versions.io_objectbox

  /**
   * https://objectbox.io
   */
  const val objectbox_kotlin: String = "io.objectbox:objectbox-kotlin:" + Versions.io_objectbox

  /**
   * https://objectbox.io
   */
  const val objectbox_rxjava: String = "io.objectbox:objectbox-rxjava:" + Versions.io_objectbox

  /**
   * http://mockk.io
   */
  const val mockk: String = "io.mockk:mockk:" + Versions.io_mockk

  /**
   * http://mockk.io
   */
  const val mockk_android: String = "io.mockk:mockk-android:" + Versions.io_mockk

  /**
   * https://developer.android.com/topic/libraries/architecture/index.html
   */
  const val android_arch_lifecycle_extensions: String = "android.arch.lifecycle:extensions:" +
    Versions.android_arch_lifecycle_extensions

  /**
   * https://developer.android.com/studio
   */
  const val com_android_tools_build_gradle: String = "com.android.tools.build:gradle:" +
    Versions.com_android_tools_build_gradle

  /**
   * http://jcp.org/en/jsr/detail?id=250
   */
  const val javax_annotation_api: String = "javax.annotation:javax.annotation-api:" +
    Versions.javax_annotation_api

  /**
   * http://github.com/square/leakcanary/
   */
  const val leakcanary_android: String = "com.squareup.leakcanary:leakcanary-android:" +
    Versions.leakcanary_android

  const val leakcanary_android_instrumentation: String =
    "com.squareup.leakcanary:leakcanary-android-instrumentation:" +
      Versions.leakcanary_android

  /**
   * http://tools.android.com
   */
  const val constraintlayout: String = "androidx.constraintlayout:constraintlayout:" +
    Versions.constraintlayout

  const val swipe_refresh_layout: String = "androidx.swiperefreshlayout:swiperefreshlayout:" +
    Versions.swipe_refresh_layout

  /**
   * http://developer.android.com/tools/extras/support-library.html
   */
  const val collection_ktx: String = "androidx.collection:collection-ktx:" + Versions.collection_ktx

  /**
   * https://developer.android.com/jetpack/androidx
   */
  const val preference_ktx: String = "androidx.preference:preference-ktx:" + Versions.preference_ktx

  /**
   * https://junit.org/junit5/
   */
  const val junit_jupiter: String = "org.junit.jupiter:junit-jupiter:" + Versions.junit_jupiter

  /**
   * https://assertj.github.io/doc/
   */
  const val assertj_core: String = "org.assertj:assertj-core:" + Versions.assertj_core

  /**
   * https://developer.android.com/topic/libraries/architecture/index.html
   */
  const val core_testing: String = "androidx.arch.core:core-testing:" + Versions.core_testing

  /**
   * https://developer.android.com/jetpack/androidx
   */
  const val fragment_ktx: String = "androidx.fragment:fragment-ktx:" + Versions.fragment_ktx

  /**
   * https://github.com/jraska/livedata-testing
   */
  const val testing_ktx: String = "com.jraska.livedata:testing-ktx:" + Versions.testing_ktx

  /**
   * https://github.com/JakeWharton/ThreeTenABP/
   */
  const val threetenabp: String = "com.jakewharton.threetenabp:threetenabp:" + Versions.threetenabp

  /**
   * https://developer.android.com/testing
   */
  const val uiautomator: String = "androidx.test.uiautomator:uiautomator:" + Versions.uiautomator

  /**
   * http://developer.android.com/tools/extras/support-library.html
   */
  const val annotation: String = "androidx.annotation:annotation:" + Versions.annotation

  /**
   * http://simple.sourceforge.net
   */
  const val simple_xml: String = "org.simpleframework:simple-xml:" + Versions.simple_xml

  /**
   * https://developer.android.com/jetpack/androidx
   */
  const val appcompat: String = "androidx.appcompat:appcompat:" + Versions.appcompat

  const val appcompat_resource = "androidx.appcompat:appcompat-resources:" + Versions.appcompat

  /**
   * https://github.com/ReactiveX/RxAndroid
   */
  const val rxandroid: String = "io.reactivex.rxjava2:rxandroid:" + Versions.rxandroid

  /**
   * https://developer.android.com/jetpack/androidx
   */
  const val core_ktx: String = "androidx.core:core-ktx:" + Versions.core_ktx

  const val androidx_activity: String = "androidx.activity:activity:" + Versions.androidx_activity

  /**
   * https://github.com/kiwix/java-libkiwix
   */
  const val libkiwix: String = "org.kiwix:libkiwix:" + Versions.libkiwix

  /**
   * https://github.com/material-components/material-components-android
   */
  const val material: String = "com.google.android.material:material:" + Versions.material

  const val multidex: String = "androidx.multidex:multidex:" + Versions.multidex

  const val barista: String = "com.adevinta.android:barista:" + Versions.barista

  /**
   * https://github.com/ReactiveX/RxJava
   */
  const val rxjava: String = "io.reactivex.rxjava2:rxjava:" + Versions.rxjava

  /**
   * https://developer.android.com/jetpack/androidx
   */
  const val webkit: String = "androidx.webkit:webkit:" + Versions.webkit

  /**
   * https://developer.android.com/testing
   */
  const val junit: String = "androidx.test.ext:junit:" + Versions.junit

  /**
   * https://github.com/deano2390/MaterialShowcaseView
   */
  const val material_show_case_view: String =
    "com.github.deano2390:MaterialShowcaseView:" + Versions.material_show_case_view

  const val roomKtx = "androidx.room:room-ktx:" + Versions.roomVersion

  const val roomCompiler = "androidx.room:room-compiler:" + Versions.roomVersion

  const val roomRuntime = "androidx.room:room-runtime:" + Versions.roomVersion

  const val roomRxjava2 = "androidx.room:room-rxjava2:" + Versions.roomVersion

  /**
   * https://github.com/zxing/zxing
   */
  const val zxing = "com.google.zxing:core:" + Versions.zxing

  /**
   * https://github.com/slackhq/keeper
   */
  const val keeper = "com.slack.keeper:keeper:" + Versions.keeper

  /**
   * https://github.com/tonyofrancis/Fetch
   */
  const val fetch: String = "com.github.tonyofrancis.Fetch:fetch2:" + Versions.fetch
  const val fetchOkhttp: String = "com.github.tonyofrancis.Fetch:fetch2okhttp:" + Versions.fetch
}
